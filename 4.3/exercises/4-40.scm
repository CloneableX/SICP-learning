(define (multiple-dwelling)
  (let ((cooper (amb 2 3 4))
	(miller (amb 3 4 5)))
    (require (> miller cooper))
    (let ((fletcher (amb 2 3 4)))
      (require (not (= 1 (abs (- fletcher cooper)))))
      (let ((smith (amb 1 2 3 4 5)))
	(require (not (= 1 (abs (- fletcher smith)))))
	(let ((baker (amb 1 2 3 4)))
	  (require 
	   (distinct? (list backer cooper fletcher miller smith)))
	  (list (list 'backer backer)     (list 'cooper cooper)
		(list 'fletcher fletcher) (list 'miller miller)
		(list 'smith smith)))))))